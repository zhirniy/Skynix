// Variables
$breakpoint-x-small: 	480px;
$breakpoint-smaller: 	640px;
$breakpoint-small: 		768px;
$breakpoint-medium: 	992px;
$breakpoint-large: 		1200px;

$breakpoints: (
	'x-small': 		(min-width: $breakpoint-x-small),
	'x-small-max': 	(max-width: $breakpoint-x-small - 1),
	'smaller': 		(min-width: $breakpoint-smaller),
	'smaller-max': 	(max-width: $breakpoint-smaller - 1),
	'small': 		(min-width: $breakpoint-small),
	'small-max': 	(max-width: $breakpoint-small - 1),
	'medium': 		(min-width: $breakpoint-medium),
	'medium-max': 	(max-width: $breakpoint-medium - 1),
	'large': 		(min-width: $breakpoint-large),
	'large-max': 	(max-width: $breakpoint-large - 1),
	'landscape': 	(orientation: landscape),
	'portrait': 	(orientation: portrait),
);

$breakpoints-grid: (
	'xsm': 	'x-small',
	'sml': 	'smaller',
	'sm': 	'small',
	'md': 	'medium',
	'lg': 	'large'
);

$grid-col-count: 12;
$global-glutter: 20px;

// Colors
$color-black: #000000;
$color-white: #ffffff;
$color-grey: #666666;
$color-blue-navy: #314159;
$color-blue: #007aff;
$color-red: #E31415;
$color-green: #5cb85c;
$color-lightgreen: #398439;
$color-darkgreen:#255625;




// Mixins
@mixin respond-to($breakpoint) {
    $raw-query: map-get($breakpoints, $breakpoint);

    @if $raw-query {
        $query: if(type-of($raw-query) == 'string', unquote($raw-query), inspect($raw-query));

        @media #{$query} {
            @content;
        }
    } @else {
        @error 'No value found for `#{$breakpoint}`. '
         + 'Please make sure it is defined in `$breakpoints` map.';
    }
}

@mixin clearfloat {
    &:after {
        content: '';
        clear: both;
        display: table;
    }
}

// Box sizing reset
* {
	box-sizing: border-box;
	&:before,
	&:after {
		box-sizing: inherit;
	} 
}

// Body
.body{
  background-color: aliceblue;
}

//Logo
.logo-section{
  padding-left: #{$global-glutter/2};

  &__img{
    background-image: url("logo.png");
      width:100px;
      height:50px;
      background-size:cover;
  }

  @include respond-to('small') {
    position:absolute;
    &__img{
      width:180px;
      height:100px;
    }
  }
}

// Container 
.container {
	width: 100%;
	margin-left: auto;
	margin-right: auto;
	padding-left: #{$global-glutter/2};
	padding-right: #{$global-glutter/2};
	@include respond-to('small') {
		width: calc(#{$breakpoint-small});
	}

	@include respond-to('medium') {
		width: calc(#{$breakpoint-medium});
	}

	@include respond-to('large') {
		width: calc(#{$breakpoint-large});
	}

  &--full {
    width: 100%;
  }
  &__popup{
    background-color:$color-lightgreen;
      margin-left:10%;
      margin-right:10%;
      margin-top:5%;
      text-align:center;
    @include respond-to('small') {
      margin-left:30%;
      margin-right:30%;
      margin-top:0%;
    }
  }
}

// Grid styles
.grid-row {
  @include clearfloat();
  margin-left: #{-1*$global-glutter/2};
  margin-right: #{-1*$global-glutter/2};
  width: auto;

  &__col {
    float: left;
    padding-left: #{$global-glutter/2};
    padding-right: #{$global-glutter/2};
    width: 100%;

    @each $name, $breakpoint in $breakpoints-grid {
      @include respond-to($breakpoint) {
        @for $i from 1 through $grid-col-count {
          &--#{$name}-#{$i} {
            width: #{($i/$grid-col-count)*100%};
            margin-left:25%;
          }
        }

        &--#{$name}-hidden {
          display: none;
        }
      }
    }
  }
}

.button {
  &--submit {
    display: inline-block;
    margin: 5px 0;
    padding: 5px 10px;
  }
}

// Register form styles
.form {
  &__label {
    display: block;
    font-weight: bold;
    
    &--error {
      color: $color-red;
    }
  }
  
  @mixin input-style(){
    width: 100%;
    padding: 5px;
    margin-bottom: $global-glutter/2;
    outline: 0;
  }

  &__input {
    @include input-style();
    border: 1px solid $color-grey;
    background-color: $color-white;
    
    &:hover {
      box-shadow: 0 1px 2px 0 rgba($color-blue, 0.2);
    }
    
    &:focus {
      box-shadow: 0 1px 3px 0 rgba($color-blue, 0.5);
    }
    
    &--error {
      border-color: $color-red;
    }
  }

  &__submit {
    @include input-style();
      background-color: $color-green;
      border-radius: 10px;
      font-weight: 700;
      color: $color-white;
      border: 1px solid $color-darkgreen;
    &:hover {
       background-color: $color-lightgreen;
    }


  }
  
  &__button {
    text-align: right;
    
    &--center {
      text-align: center;
    }
    
    &--left {
      text-align: left;
    }
    
  }

  &__message {
    color: $color-red;
    margin-bottom: $global-glutter/2;
    display: block;
  }

}

.form-title{
   text-align: center;
}

.pop-up{
  display: none;
}